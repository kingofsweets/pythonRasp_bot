import random
import time
import re
import easy_logic
import enemy
import threading
import os
import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import INFO_STATUS
from INFO_STATUS import Infochar
import map_gg

keyboard = VkKeyboard(one_time=True)
keyboard.add_button('–ü—Ä–∏–≤–µ—Ç', color=VkKeyboardColor.NEGATIVE)
keyboard.add_button('–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞', color=VkKeyboardColor.POSITIVE)
keyboard.add_line()
keyboard.add_location_button()
keyboard.add_line()


def upp_money():
    while True:
        time.sleep(60)
        maimes = INFO_STATUS.getter_members()
        for chel in maimes:
            INFO_STATUS.refactor_member('coins', chel.coins + chel.improve * chel.lvl // 10, chel.id)
            if chel.energy < easy_logic.max_energy(chel.lvl):
                INFO_STATUS.refactor_member('energy', chel.energy + 5 * (chel.lvl + 1), chel.id)


def decris_calld():
    while True:
        time.sleep(1)
        maimes = INFO_STATUS.getter_members()
        for chel in maimes:
            if chel.time_calld != 0 and chel.state != 1:
                print(chel.time_calld)
                INFO_STATUS.refactor_member('time_calld', chel.time_calld - 1, chel.id)
                if chel.time_calld - 1 == 0:
                    send_message(1, f'–ö—É–ª–¥–∞—É–Ω —É @id{chel.id}({chel.name}) —Å–Ω—è—Ç')
                    send_messageklava(1, '–í—ã–±–µ—Ä–∏—Ç–µ –∫—É–¥–∞ –ø–æ–π—Ç–∏:', "keyboards/go_p"
                                                                 ".json")


def upload_photo(name):
    upload = vk_api.VkUpload(vk)
    photo = upload.photo_messages(name)
    owner_id = photo[0]['owner_id']
    photo_id = photo[0]['id']
    access_key = photo[0]['access_key']
    attachment = f'photo{owner_id}_{photo_id}_{access_key}'
    return attachment


# def upload_graffity(name):
#     upload = vk_api.VkUpload(vk)
#     photo = upload.graffiti(name)
#     print(photo)


def send_messageklava(peer_id, message, klava):
    vk.messages.send(
        chat_id=peer_id,
        message=message,
        random_id=random.getrandbits(64),
        keyboard=open(klava, "r", encoding='utf-8-sig').read()
    )


def send_message(peer_id, message):
    vk.messages.send(
        chat_id=peer_id,
        message=message,
        random_id=random.getrandbits(64)
    )


def send_messagept(peer_id, message, photo):
    vk.messages.send(
        chat_id=peer_id,
        message=message,
        random_id=random.getrandbits(64),
        attachment=photo
    )


def main_conept():
    for event in longpoll.listen():
        if event.type == VkBotEventType.MESSAGE_NEW:

            if event.from_chat:
                print(event.obj)
                try:
                    if event.obj['action']['type'] == 'chat_invite_user':
                        send_message(event.chat_id,
                                     f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º @id{event.obj['action']['member_id']}(–ë–µ–∑—ã–º—è–Ω–Ω–æ–≥–æ) –≤ "
                                     f"—ç—Ç–æ–º "
                                     f"–¥–æ–≤–æ–ª—å–Ω–æ –Ω–µ–∑–∞–≤—ã—Å–ª–æ–≤–∞—Ç–æ–º –º–∏—Ä–µ. –ü—É—Å—Ç—å –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è—Ö –µ–≥–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç"
                                     f" –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞—á–∞.")
                        a = Infochar()
                        a.id = event.obj['action']['member_id']
                        a.saver()
                        send_message(event.chat_id, '–ê–∫–∫–∞—É–Ω—Ç –ø—Ä–∏–∫–ª—é—á–µ–Ω—Ü–∞ —Å–æ–∑–¥–∞–Ω')

                    if event.obj['action']['type'] == 'chat_kick_user':
                        send_message(event.chat_id,
                                     f"@id{event.obj['action']['member_id']}(–ü–æ–∫–∏–¥–∞—é—â–∏–π) –±—ã–ª —Ö–æ—Ä–æ—à–∏–º –º–∞–ª—ã–º "
                                     f"–ø—É—Å—Ç—å –µ–≥–æ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤–µ—Ä–∂–µ–Ω–∏—è—Ö —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç —á–∏—Å—Ç—ã–π —É—Å–ø–µ—Ö.")
                        INFO_STATUS.delete_member(event.obj['action']['member_id'])
                        points = INFO_STATUS.getter_map_for_draw()
                        for point in points:
                            if point.owner_id == event.obj['action']['member_id']:
                                INFO_STATUS.delete_point(point.owner_id)
                        send_message(event.chat_id, '–ê–∫–∫–∞—É–Ω—Ç –ø—Ä–∏–∫–ª—é—á–µ–Ω—Ü–∞ —É–Ω–∏—á—Ç–æ–∂–µ–Ω')
                except KeyError:
                    print('action')
                message = event.obj['text'].lower()
                if '[club198702757|@club198702757]' in message:
                    message = message.replace('[club198702757|@club198702757] ', '')
                else:
                    message = message.replace('[club198702757|—Ç–∞–π–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ –∫—Ç–±–æ 1-3] ', '')

                if message == '–ø–æ–π—Ç–∏ –Ω–∞ –æ—Ö–æ—Ç—É':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            if chel.pointnow == '0':
                                send_message(event.chat_id, '–ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –≤ –∑–µ–º–ª–∏ –∑–ª–∞. –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ –æ—á–∫–æ.')
                                INFO_STATUS.refactor_member('pointnow', easy_logic.gen_pos(), chel.id)

                                map_gg.map_gen_for_now()
                                gen_link = upload_photo('temp_of_map_demon_gen.png')
                                send_messagept(event.chat_id, '–í—ã —Ç—É—Ç–∞: ü™ê–ü–∏–≤–Ω–∞—è –∑–∞—Å—Ç–∞–≤–∞ –¥–µ–º–æ–Ω–æ–≤ü™ê', gen_link)
                            else:
                                send_message(event.chat_id, '–ß–µ–ª, —Ç—ã —É–∂–µ —Ç–µ–ø–∞ –Ω–∞ –∫–∞—Ä—Ç–µ.')

                if message == '–ø–æ–∫–∞–∑–∞—Ç—å –ª–æ–∫–∞—Ü–∏—é':
                    map_gg.map_gen_for_now()
                    gen_link = upload_photo('temp_of_map_demon_gen.png')
                    send_messagept(event.chat_id, 'ü™ê–ü–∏–≤–Ω–∞—è –∑–∞—Å—Ç–∞–≤–∞ –¥–µ–º–æ–Ω–æ–≤ü™ê', gen_link)
                    send_messageklava(3, '–í—ã–±–µ—Ä–∏—Ç–µ –∫—É–¥–∞ –ø–æ–π—Ç–∏:', "keyboards/go_p"
                                                                 ".json")

                if message == '–≤–ø–µ—Ä—ë–¥':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            if chel.pointnow == '0':
                                send_message(event.chat_id, '–í—ã –Ω–µ –Ω–∞ –æ—Ö–æ—Ç–µ')
                                continue
                            if chel.state == 1:
                                send_message(event.chat_id, '–í—ã –≤ –±–æ—é!')
                                continue
                            if chel.time_calld == 0:
                                pos = easy_logic.up(chel.pointnow)
                                if pos != chel.pointnow:
                                    INFO_STATUS.refactor_member('pointnow', pos, chel.id)
                                    enemies = INFO_STATUS.getter_enem_for_gen()
                                    for mob in enemies:
                                        mob.random_go()
                                    map_gg.map_gen_for_now()
                                    gen_link = upload_photo('temp_of_map_demon_gen.png')
                                    send_messagept(event.chat_id, 'ü™ê–ü–∏–≤–Ω–∞—è –∑–∞—Å—Ç–∞–≤–∞ –¥–µ–º–æ–Ω–æ–≤ü™ê', gen_link)
                                    INFO_STATUS.refactor_member('time_calld', 7, chel.id)
                                    send_message(event.chat_id, '–í—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã –Ω–∞ 7 —Å–µ–∫—É–Ω–¥')
                                    easy_logic.get_chek()
                                    chel_peop = INFO_STATUS.getter_members()
                                    for sa in chel_peop:
                                        if sa.id == chel.id:
                                            if sa.state == 1:
                                                send_message(event.chat_id, '–ù–∞ –≤–∞—Å –Ω–∞–ø–∞–ª–∏!')
                                                vrag = INFO_STATUS.getter_enem()
                                                for mob in vrag:
                                                    if sa.id_enem == mob.id:
                                                        enemy.draw_enem_info(mob.name, mob.hp, 0, mob.file_m,
                                                                             mob.id)
                                                        gen_link = upload_photo(mob.id + '.jpg')
                                                        send_messagept(event.chat_id, f'{mob.name}', gen_link)
                                                        send_messageklava(3, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', "keyboards/action"
                                                                                                   ".json")


                                else:
                                    send_message(event.chat_id, '–í–≤–µ—Ä—Ö—É –ø—Ä–æ—Ö–æ–¥–∞ –Ω–µ—Ç—É.')
                            else:
                                send_message(event.chat_id, f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ö–æ–¥–∏—Ç—å –µ—â—ë {chel.time_calld} —Å–µ–∫—É–Ω–¥')

                if message == '–Ω–∞–∑–∞–¥':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            if chel.pointnow == '0':
                                send_message(event.chat_id, '–í—ã –Ω–µ –Ω–∞ –æ—Ö–æ—Ç–µ')
                                continue
                            if chel.state == 1:
                                send_message(event.chat_id, '–í—ã –≤ –±–æ—é!')
                                continue
                            if chel.time_calld == 0:
                                pos = easy_logic.down(chel.pointnow)
                                if pos != chel.pointnow:
                                    INFO_STATUS.refactor_member('pointnow', pos, chel.id)
                                    enemies = INFO_STATUS.getter_enem_for_gen()
                                    for mob in enemies:
                                        mob.random_go()
                                    map_gg.map_gen_for_now()
                                    gen_link = upload_photo('temp_of_map_demon_gen.png')
                                    send_messagept(event.chat_id, 'ü™ê–ü–∏–≤–Ω–∞—è –∑–∞—Å—Ç–∞–≤–∞ –¥–µ–º–æ–Ω–æ–≤ü™ê', gen_link)
                                    INFO_STATUS.refactor_member('time_calld', 7, chel.id)
                                    send_message(event.chat_id, '–í—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã –Ω–∞ 7 —Å–µ–∫—É–Ω–¥')
                                    easy_logic.get_chek()
                                    chel_peop = INFO_STATUS.getter_members()
                                    for sa in chel_peop:
                                        if sa.id == chel.id:
                                            if sa.state == 1:
                                                send_message(event.chat_id, '–ù–∞ –≤–∞—Å –Ω–∞–ø–∞–ª–∏!')
                                                vrag = INFO_STATUS.getter_enem()
                                                for mob in vrag:
                                                    if sa.id_enem == mob.id:
                                                        enemy.draw_enem_info(mob.name, mob.hp, 0, mob.file_m,
                                                                             mob.id)
                                                        gen_link = upload_photo(mob.id + '.jpg')
                                                        send_messagept(event.chat_id, f'{mob.name}', gen_link)
                                                        send_messageklava(3, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', "keyboards/action"
                                                                                                   ".json")

                                else:
                                    send_message(event.chat_id, '–í–Ω–∏–∑—É –ø—Ä–æ—Ö–æ–¥–∞ –Ω–µ—Ç—É.')
                            else:
                                send_message(event.chat_id, f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ö–æ–¥–∏—Ç—å –µ—â—ë {chel.time_calld} —Å–µ–∫—É–Ω–¥')

                if message == '–≤–ø—Ä–∞–≤–æ':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            if chel.pointnow == '0':
                                send_message(event.chat_id, '–í—ã –Ω–µ –Ω–∞ –æ—Ö–æ—Ç–µ')
                                continue
                            if chel.state == 1:
                                send_message(event.chat_id, '–í—ã –≤ –±–æ—é!')
                                continue
                            if chel.time_calld == 0:
                                pos = easy_logic.right(chel.pointnow)
                                if pos != chel.pointnow:
                                    INFO_STATUS.refactor_member('pointnow', pos, chel.id)
                                    enemies = INFO_STATUS.getter_enem_for_gen()
                                    for mob in enemies:
                                        mob.random_go()
                                    map_gg.map_gen_for_now()
                                    gen_link = upload_photo('temp_of_map_demon_gen.png')
                                    send_messagept(event.chat_id, 'ü™ê–ü–∏–≤–Ω–∞—è –∑–∞—Å—Ç–∞–≤–∞ –¥–µ–º–æ–Ω–æ–≤ü™ê', gen_link)
                                    INFO_STATUS.refactor_member('time_calld', 7, chel.id)
                                    send_message(event.chat_id, '–í—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã –Ω–∞ 7 —Å–µ–∫—É–Ω–¥')
                                    easy_logic.get_chek()
                                    chel_peop = INFO_STATUS.getter_members()
                                    for sa in chel_peop:
                                        if sa.id == chel.id:
                                            if sa.state == 1:
                                                send_message(event.chat_id, '–ù–∞ –≤–∞—Å –Ω–∞–ø–∞–ª–∏!')
                                                vrag = INFO_STATUS.getter_enem()
                                                for mob in vrag:
                                                    if sa.id_enem == mob.id:
                                                        enemy.draw_enem_info(mob.name, mob.hp, 0, mob.file_m,
                                                                             mob.id)
                                                        gen_link = upload_photo(mob.id + '.jpg')
                                                        send_messagept(event.chat_id, f'{mob.name}', gen_link)
                                                        send_messageklava(3, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', "keyboards/action"
                                                                                                   ".json")

                                else:
                                    send_message(event.chat_id, '–°–ø—Ä–∞–≤–∞ –ø—Ä–æ—Ö–æ–¥–∞ –Ω–µ—Ç—É.')
                            else:
                                send_message(event.chat_id, f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ö–æ–¥–∏—Ç—å –µ—â—ë {chel.time_calld} —Å–µ–∫—É–Ω–¥')

                if message == '–≤–ª–µ–≤–æ':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            if chel.pointnow == '0':
                                send_message(event.chat_id, '–í—ã –Ω–µ –Ω–∞ –æ—Ö–æ—Ç–µ')
                                continue
                            if chel.state == 1:
                                send_message(event.chat_id, '–í—ã –≤ –±–æ—é!')
                                continue
                            if chel.time_calld == 0:
                                pos = easy_logic.left(chel.pointnow)
                                if pos != chel.pointnow:
                                    INFO_STATUS.refactor_member('pointnow', pos, chel.id)
                                    enemies = INFO_STATUS.getter_enem_for_gen()
                                    for mob in enemies:
                                        mob.random_go()
                                    map_gg.map_gen_for_now()
                                    gen_link = upload_photo('temp_of_map_demon_gen.png')
                                    send_messagept(event.chat_id, 'ü™ê–ü–∏–≤–Ω–∞—è –∑–∞—Å—Ç–∞–≤–∞ –¥–µ–º–æ–Ω–æ–≤ü™ê', gen_link)
                                    INFO_STATUS.refactor_member('time_calld', 7, chel.id)
                                    send_message(event.chat_id, '–í—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã –Ω–∞ 7 —Å–µ–∫—É–Ω–¥')
                                    easy_logic.get_chek()
                                    chel_peop = INFO_STATUS.getter_members()
                                    for sa in chel_peop:
                                        if sa.id == chel.id:
                                            if sa.state == 1:
                                                send_message(event.chat_id, '–ù–∞ –≤–∞—Å –Ω–∞–ø–∞–ª–∏!')
                                                vrag = INFO_STATUS.getter_enem()
                                                for mob in vrag:
                                                    if sa.id_enem == mob.id:
                                                        enemy.draw_enem_info(mob.name, mob.hp, 0, mob.file_m,
                                                                             mob.id)
                                                        gen_link = upload_photo(mob.id + '.jpg')
                                                        send_messagept(event.chat_id, f'{mob.name}', gen_link)
                                                        send_messageklava(3, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', "keyboards/action"
                                                                                                   ".json")

                                else:
                                    send_message(event.chat_id, '–°–ª–µ–≤–∞ –ø—Ä–æ—Ö–æ–¥–∞ –Ω–µ—Ç—É.')
                            else:
                                send_message(event.chat_id, f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ö–æ–¥–∏—Ç—å –µ—â—ë {chel.time_calld} —Å–µ–∫—É–Ω–¥')

                if message == '–ø–æ–∫–∏–Ω—É—Ç—å –æ—Ö–æ—Ç—É':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            if chel.state != 1:
                                INFO_STATUS.refactor_member('pointnow', '0', chel.id)
                                send_message(event.chat_id, '–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–∫–∏–Ω—É–ª–∏ –∑–µ–º–ª—é.')

                if message == '–∞—Ç–∞–∫–∞':
                    maimes = INFO_STATUS.getter_members()
                    vrag = INFO_STATUS.getter_enem()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            if chel.state == 1:
                                for mob in vrag:
                                    if chel.id_enem == mob.id:
                                        if mob.hp - chel.attack <= 0:
                                            INFO_STATUS.refactor_member('state', 0, chel.id)
                                            INFO_STATUS.refactor_member('id_enem', 0, chel.id)
                                            send_message(event.chat_id, '–ú–æ–± —É–±–∏—Ç')
                                            INFO_STATUS.delete_enem(mob.id)
                                            os.remove(f'{mob.id}.jpg')
                                            vrag = INFO_STATUS.getter_enem()
                                            if len(vrag) <= 3:
                                                INFO_STATUS.gen_enemies()
                                        else:
                                            INFO_STATUS.refactor_enem('hp', mob.hp - chel.attack, mob.id)
                                            enemy.draw_enem_info(mob.name, mob.hp - chel.attack, 0, mob.file_m,
                                                                 mob.id)
                                            gen_link = upload_photo(mob.id + '.jpg')
                                            send_messagept(event.chat_id, f'{mob.name}', gen_link)
                                            send_messageklava(event.chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', "keyboards/action"
                                                                                                   ".json")

                if message == 'üíú–∫—Ç–æ –≥–µ–π?üíú':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            owner = chel
                            print(owner.name)
                            if chel.coins >= 30:
                                INFO_STATUS.refactor_member('coins', chel.coins - 30, event.obj['from_id'])
                                send_message(event.chat_id, f'@id{owner.id}({owner.name}) –ø–æ—Ç—Ä–∞—Ç–∏–ª—Å—è –∞–∂ –Ω–∞ 30 –ø–∞–¥—à–∏—Ö '
                                                            f'–º–æ–Ω–µ—Ç —Ä–∞–¥–∏ '
                                                            f'–≥–µ–π—Å—Ç–≤–∞')
                                members = vk.messages.getConversationMembers(peer_id=2000000000 + event.chat_id)[
                                    'items']
                                members_ids = [member['member_id'] for member in members if member['member_id'] > 0]
                                idm = random.randint(0, len(members_ids) - 1)
                                for sex in maimes:
                                    if sex.id == members_ids[idm]:
                                        INFO_STATUS.refactor_member('gay_lvl', sex.gay_lvl + 1, members_ids[idm])

                                send_message(event.chat_id, '–≥–µ–π - @id' + str(members_ids[idm]) + '(–í—Å–µ–º–∏ –ª—é–±–∏–º—ã–π)')
                            else:
                                send_message(event.chat_id, '–î–µ–Ω–µ–≥ –Ω–µ—Ç—É, –≥–µ–π—Å—Ç–≤–æ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è')

                if message == 'üñ§–∫—Ç–æ –≥–µ–∏?üñ§':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            owner = chel
                            print(owner.name)
                            if chel.coins >= 150:
                                INFO_STATUS.refactor_member('coins', chel.coins - 150, event.obj['from_id'])
                                send_message(event.chat_id, f'@id{owner.id}({owner.name}) –ø–æ—Ç—Ä–∞—Ç–∏–ª—Å—è –∞–∂ –Ω–∞ 150 –ø–∞–¥—à–∏—Ö '
                                                            f'–º–æ–Ω–µ—Ç —Ä–∞–¥–∏ '
                                                            f'–û–ì–†–û–ú–ù–û–ì–û –≥–µ–π—Å—Ç–≤–∞')
                                for sex in maimes:
                                    INFO_STATUS.refactor_member('gay_lvl', sex.gay_lvl + 1, sex.id)
                                    send_message(event.chat_id, '–≥–µ–π - @id' + str(sex.id) + '(–í—Å–µ–º–∏ –ª—é–±–∏–º—ã–π)')
                            else:
                                send_message(event.chat_id, '–î–µ–Ω–µ–≥ –Ω–µ—Ç—É, –≥–µ–π—Å—Ç–≤–æ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è')

                if message == 'üç∫–∑–∞–∫–ª—é—á–∏—Ç—å –ø–∏–≤–Ω–æ–π –¥–æ–≥–æ–≤–æ—Ä!üç∫':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            owner = chel
                            print(owner.name)
                            if chel.coins >= 300:
                                INFO_STATUS.refactor_member('coins', chel.coins - 300, event.obj['from_id'])
                                send_message(event.chat_id, f'@id{owner.id}({owner.name}) –ø–æ—Ç—Ä–∞—Ç–∏–ª—Å—è –∞–∂ –Ω–∞ 300 –ø–∞–¥—à–∏—Ö '
                                                            f'–º–æ–Ω–µ—Ç —Ä–∞–¥–∏ '
                                                            f'–ü–∏–≤–Ω–æ–≥–æ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è')
                                members = vk.messages.getConversationMembers(peer_id=2000000000 + event.chat_id)[
                                    'items']
                                members_ids = [member['member_id'] for member in members if member['member_id'] > 0]
                                send_message(event.chat_id, '–í–∞—Å –ø–æ–Ω—è–ª, –≥–æ—Å–ø–æ–¥–∏–Ω...')
                                idm = random.randint(0, len(members_ids) - 1)
                                idm1 = random.randint(0, len(members_ids) - 1)
                                send_message(event.chat_id,
                                             f'–¢–æ–≤–∞—Ä–∏—â @id{members_ids[idm]}(–û—Ç–¥–∞—é—â–∏–π) –ø—Ä–æ–ª–µ—Ç–µ–ª –∞–∂ –Ω–∞ 60 —Ä—É–±–ª–µ–π')
                                send_message(event.chat_id,
                                             f'–¢–æ–≤–∞—Ä–∏—â @id{members_ids[idm1]}(–ü—Ä–∏–Ω–∏–º–∞—é—â–∏–π) –≤—ã–∏–≥—Ä–∞–ª –∞–∂ 60 —Ä—É–±–ª–µ–π')
                                for sex in maimes:
                                    if sex.id == members_ids[idm]:
                                        INFO_STATUS.refactor_member('coins', sex.coins - 60, sex.id)
                                        send_message(event.chat_id,
                                                     '–î–æ–≥–æ–≤–æ—Ä –∑–∞–∫–ª—é—á–µ–Ω. –¢–µ–ø–µ—Ä—å –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º –ø—Ä–∞–∑–¥–Ω–∏–∫–µ –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ '
                                                     '–ø–∏—Ç–∏—è @id' + str(
                                                         members_ids[
                                                             idm]) + '(—ç—Ç–æ—Ç —Å–∏–ª—å–Ω—ã–π –¥—É—Ö–æ–º –º—É–∂)' + ' –ø–æ–∫—É–ø–∞–µ—Ç —Å–∏–¥—Ä @id' + str(
                                                         members_ids[idm1]) + '(–Ω—É–∂–¥–∞—é—â–∏–º—É—Å—è) .')
                                    if sex.id == members_ids[idm1]:
                                        INFO_STATUS.refactor_member('coins', sex.coins + 60, sex.id)
                            else:
                                send_message(event.chat_id, '–î–µ–Ω–µ–≥ –Ω–µ—Ç—É, –ø–∏–≤–æ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è')

                elif message == 'üîÆ—É–∑–Ω–∞—Ç—å —Å—É–¥—å–±—ÉüîÆ':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            preds = open('–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è.txt', 'r', encoding='utf-8').readlines()
                            predsm = []
                            for line in preds:
                                predsm.append(line)
                            random_preds = random.randint(0, len(predsm))
                            send_message(event.chat_id, predsm[random_preds])
                            random_coins = random.randint(-180, 45)
                            INFO_STATUS.refactor_member('coins', chel.coins + random_coins, chel.id)
                            send_message(event.chat_id, '–ò–¥–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å!')
                            send_message(event.chat_id,
                                         f'–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –∑–∞–≤–µ–ª–æ –µ–≥–æ –≤ –Ω–µ–¥—Ä–∞ –¥–µ–Ω—å–∂–∞—Ç. @id{chel.id}({chel.name}) –ø–æ–ª—É—á–∞–µ—Ç {random_coins} —Ä—É–±–∞—Å–∏–∫–æ–≤')

                elif message == 'update_members':
                    members = vk.messages.getConversationMembers(peer_id=2000000000 + event.chat_id)['items']
                    members_ids = [member['member_id'] for member in members if member['member_id'] > 0]
                    for id in members_ids:
                        a = Infochar()
                        a.name = '–ë–µ–∑—ã–º—è–Ω–Ω—ã–π'
                        a.gay_lvl = 0
                        a.coins = 0
                        a.lvl = 0
                        a.id = id

                elif message == 'üìò—Ç–∞–±–ª–∏—Ü–∞ –º—É–∂–µ–πüìò':
                    members = INFO_STATUS.getter_members()
                    state = '–¢–æ–ø —á–∞—Ä–æ–≤:(–ò–º—è|–û—Ä–¥–µ–Ω –≥–µ–π—Å—Ç–≤–∞|–ü–∞–¥—à–∏—Ö –†—É–±–ª–µ–π|–£—Ä–æ–≤–µ–Ω—å)\n'
                    state = state + '-----------------------------------------------------------\n'
                    i = 1
                    for member in members:
                        state = state + f'{i}. üî∏{member.name}üî∏    | üßô{member.gay_lvl}üßô  |üí∞{member.coins}üí∞    |üîÆ{member.lvl}üîÆ\n'
                        i += 1
                    send_message(event.chat_id, state)
                elif re.search(r'\b—Å–º–µ–Ω–∏—Ç—å –∏–º—è –Ω–∞ \b', message):
                    name = message.replace('—Å–º–µ–Ω–∏—Ç—å –∏–º—è –Ω–∞ ', '')
                    name = name.title()
                    id = event.obj['from_id']
                    try:
                        INFO_STATUS.refactor_member(property='name', value=name, id=id)
                        send_message(event.chat_id, f'–£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –∏–º—è —á–µ–ª–∞ @id{id} –Ω–∞ {name}')
                    except BaseException:
                        send_message(event.chat_id, '–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è')
                elif message == 'üé≠–∫—Ç–æ —è?üé≠':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            info = f"""
                            –í—ã - ‚öí{chel.classs}‚öí, –∞ —Ç–∞–∫ –∂–µ –∑–∞–∫–æ–Ω–Ω—ã–π {chel.titul}. –ò–º–µ–µ—Ç–µ –ø—Ä–∏ —Å–µ–±–µ {chel.count_events} —É—á–∞—Å—Ç–∫–æ–≤,
                            –ü–æ–ª—É—á–∞—è –ø—Ä–∏ —ç—Ç–æ–º üíé{chel.improve}üíé –º–æ–Ω–µ—Ç –≤ –º–∏–Ω—É—Ç—É.
                            –í–∞—à–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å–ª–µ–¥—É—é—â–∏–µ:\n
                            –£—Ä–æ–≤–µ–Ω—å @id{chel.id}({chel.name}): {chel.lvl}   |||  –û–ø—ã—Ç:üî∞{chel.xp}/{easy_logic.lvl_formula(chel.lvl)}üî∞
                            –≠–Ω–µ—Ä–≥–∏—è üíö{chel.energy}/{easy_logic.max_energy(chel.lvl)}üíö ({5 * (chel.lvl + 1)} –≤ –º–∏–Ω—É—Ç—É)


                            """
                            send_message(event.chat_id, info +
                                         f'üî∏@id{chel.id}({chel.name})üî∏ | üßô–°—Ç–µ–ø–µ–Ω—å –≥–µ–π—Å—Ç–≤–∞üßô: {chel.gay_lvl} |  üí∞–ü–∞–¥—à–∏–µ —Ä—É–±–ª–∏üí∞: {chel.coins}')

                elif message == '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–µ–º–ª—è—Ö':
                    send_message(event.chat_id,
                                 '–û–≥–æ! –ì–æ—Å–ø–æ–¥–∏–Ω —Ö–æ—á–µ—Ç –∫—É–ø–∏—Ç—å –∑–µ–º–ª—é? –ë–µ–ª–ª–∏—Å–∏–º–æ, –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ '
                                 '–Ω–∞ –∫–∞—Ä—Ç—É.')
                    map_gg.map_gen_forbuy()
                    photo = upload_photo('temp_of_map_gen_forbuy.png')

                    send_messagept(event.chat_id,
                                   '–í–æ—Ç, –≤—ã–±–µ—Ä–∏ —Å–≤–æ–±–æ–¥–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏ –∏ –ø–ª–∞—Ç–∏! –¶–µ–Ω—ã —É–∫–∞–∑–∞–Ω—ã –Ω–∞ —Å–∞–º–∏—Ö –∑–µ–º–ª—è—Ö.', photo)
                    points = INFO_STATUS.getter_map_for_draw()
                    info_map = ''
                    maimes = INFO_STATUS.getter_members()
                    for pk in points:
                        print(pk.cost)
                        if pk.status == '1':
                            for chel in maimes:
                                if chel.id == pk.owner_id:
                                    info_map += f'üó∫{pk.point}üó∫, –•–æ–∑—è–∏–Ω: {chel.name}, –î–æ—Ö–æ–¥ —Å —Ç–æ—á–∫–∏: {pk.cost / 1000}\n'
                    send_message(event.chat_id, '–¢–µ–∫—É—â–∏–µ –∑–∞–Ω—è—Ç—ã–µ —Ç–æ—á–∫–∏: \n' + info_map)


                elif re.search(r'\b–∫—É–ø–∏—Ç—å —É—á–∞—Å—Ç–æ–∫\b', message):
                    maimes = INFO_STATUS.getter_members()
                    pointsd = INFO_STATUS.getter_map_all()
                    point = message.replace('–∫—É–ø–∏—Ç—å —É—á–∞—Å—Ç–æ–∫ ', '').title()
                    for pk in pointsd:
                        if pk.point == point:
                            sta = pk.cost
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            send_message(event.chat_id, f'–°—Ç–æ–∏–º–æ—Å—Ç—å —É—á–∞—Å—Ç–∫–∞: {(chel.count_events + 1) * sta} —Ä—É–±–∞—Å–µ—Ü–æ–≤')
                            if chel.coins >= (chel.count_events + 1) * sta:
                                for pk in pointsd:
                                    if pk.point == point:
                                        if pk.status != '1':
                                            send_message(event.chat_id,
                                                         f'–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä, –¥–æ–≥–æ–≤–æ—Ä –∑–∞–∫–ª—é—á–µ–Ω. @id{chel.id}({chel.name}) —Ç—Ä–∞—Ç–∏—Ç {pk.cost * (chel.count_events + 1)} —Ä—É–±–∞—Å–∏–∫–æ–≤ –Ω–∞ —Ä–∞–π—Å–∫–∏–π —É–≥–æ–ª–æ–∫.')
                                            INFO_STATUS.refactor_member('coins', chel.coins - (
                                                    pk.cost * (chel.count_events + 1)), chel.id)
                                            INFO_STATUS.refactor_map('status', '1', point)
                                            if chel.count_events <= 0:

                                                color = str(random.randint(1, 255)) + ',' + str(
                                                    random.randint(1, 255)) + ',' + str(random.randint(1, 255))
                                                INFO_STATUS.refactor_map('color', color, point)
                                            else:
                                                for spk in pointsd:
                                                    if spk.owner_id == chel.id:
                                                        color = spk.color
                                                        break
                                                INFO_STATUS.refactor_map('color', color, point)
                                            INFO_STATUS.refactor_member('count_event', chel.count_events + 1, chel.id)
                                            INFO_STATUS.refactor_member('improve_money',
                                                                        (chel.improve + (pk.cost / 1000)) * chel.lvl,
                                                                        chel.id)

                                            send_message(event.chat_id,
                                                         f'–¢–µ–ø–µ—Ä—å –≤–∞—à –¥–æ—Ö–æ–¥ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç:{(chel.improve + (pk.cost / 1000))} (—Ä—É–±–ª–∏/–º–∏–Ω—É—Ç–∞)')

                                            INFO_STATUS.refactor_map('Owner_id', chel.id, point)
                                            map_gg.map_gen()
                                            photo = upload_photo('temp_of_map_gen.png')
                                            send_messagept(event.chat_id, '–ö–∞—Ä—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∞', photo)
                                        else:
                                            send_message(event.chat_id, '–≠—Ç–æ—Ç —É—á–∞—Å—Ç–æ–∫ –∑–∞–Ω—è—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π.')
                            else:
                                send_message(event.chat_id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏!')

                elif re.search(r'\b—Å–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –Ω–∞\b', message):
                    name = message.replace('—Å–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –Ω–∞ ', '')
                    name = name.title()
                    id = event.obj['from_id']
                    if name == '–ê–ª—Ö–∏–º–∏–∫' or name == '–†–µ–º–µ—Å–ª–µ–Ω–Ω–∏–∫' or name == '–ü–æ–≤–∞—Ä' or name == '–£—á–∏—Ç–µ–ª—å –ù–µ–º–µ—Ü–∫–æ–≥–æ':
                        INFO_STATUS.refactor_member(property='class', value=name, id=id)
                        send_message(event.chat_id, f'–£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è —á–µ–ª–∞ @id{id} –Ω–∞ {name}')
                    else:
                        send_message(event.chat_id, '–¢–∞–∫–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –Ω–µ—Ç! –•–∞–≤—Ç–∏—Ç –Ω–∞–¥–æ –º–Ω–æ–π –∏–∑–¥–µ–≤–∞—Ç—å—Å—è!')

                elif message == '‚öí—Ä–∞–±–æ—Ç–∞—Ç—å‚öí':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            if chel.energy - (chel.lvl + 1) * 30 > 0:
                                energy = chel.energy - (chel.lvl + 1) * 30
                                INFO_STATUS.refactor_member('energy', energy, chel.id)
                                xp = random.randint((chel.lvl + 1) * 150, (chel.lvl + 1) * 500)
                                INFO_STATUS.refactor_member('xp', chel.xp + xp, chel.id)
                                info = f"""
                                üéØ–†–∞–±–æ—Ç–∞üéØ {chel.classs}–∞ –æ—á–µ–Ω—å —Ç—è–∂–µ–ª–∞, –ø–æ—Ä–æ–π –æ–Ω–∞ –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ –º–∏—Ä –ø–æ-–¥—Ä—É–≥–æ–º—É.
                                @id{chel.id}({chel.name}) —Ä–∞–±–æ—Ç–∞–ª —Å–µ–≥–æ–¥–Ω—è –æ—á–µ–Ω—å —É—Å—Ä–µ–Ω–¥–Ω–æ –∏ –ø–æ–ª—É—á–∏–ª {xp} –æ–ø—ã—Ç–∞.
                                –ü—Ä–∏ —ç—Ç–æ–º –æ–Ω –ø–æ—Ç—Ä–∞—Ç–∏–ª üíö{(chel.lvl + 1) * 30}üíö —ç–Ω–µ—Ä–≥–∏–∏. –£ –Ω–µ–≥–æ –æ—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ üíö{energy}üíö —ç–Ω–µ—Ä–∏–∏ .
                                                                                        """
                                money = random.randint((chel.lvl + 1) * 3, (chel.lvl + 1) * 100)
                                INFO_STATUS.refactor_member('coins', chel.coins + money, chel.id)
                                if money < ((chel.lvl + 1) * 3 + (chel.lvl + 1) * 25) // 2:
                                    info_2 = f'–û–¥–Ω–∞–∫–æ –Ω–∞—á–∞–ª—å–Ω–∏–∫ –µ–≥–æ –Ω–µ –≤–∑–ª—é–±–∏–ª, –ø–æ—ç—Ç–æ–º—É –¥–∞–ª –≤—Å–µ–≥–æ –ª–∏—à—å üí∞{money}üí∞ –ø–∞–¥—à–∏—Ö —Ä—É–±–ª–µ–π.'
                                else:
                                    info_2 = f'–ò –µ–º—É –ø–æ–≤–µ–∑–ª–æ, –≤–µ–¥—å –Ω–∞—á–∞–ª—å–Ω–∏–∫ –¥–∞–ª –µ–º—É —Ü–µ–ª—ã—Ö üí∞{money}üí∞ –ø–∞–¥—à–∏—Ö —Ä—É–±–ª–µ–π.'
                                info = info + info_2
                                send_message(event.chat_id, info)
                                send_message(event.chat_id,
                                             f'–£—Ä–æ–≤–µ–Ω—å @id{chel.id}({chel.name}): {chel.lvl}||| –û–ø—ã—Ç: üî∞{chel.xp + xp}/{easy_logic.lvl_formula(chel.lvl)}üî∞')
                                if chel.xp + xp >= easy_logic.lvl_formula(chel.lvl):
                                    send_message(event.chat_id, f'üèÜ–£—Ä–æ–≤–µ–Ω—å –ø–æ–≤—ã—à–µ–Ω –¥–æ {chel.lvl + 1}üèÜ')
                                    INFO_STATUS.refactor_member('lvl', chel.lvl + 1, chel.id)
                                    send_message(event.chat_id, f'üíö–≠–Ω–µ—Ä–≥–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞üíö')
                                    INFO_STATUS.refactor_member('energy', easy_logic.max_energy(chel.lvl), chel.id)
                            else:
                                send_message(event.chat_id, f'üíö–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏üíö')



                elif message == '–∞–æ–∞':
                    send_messageklava(event.chat_id, '–ù–∞', r"keyboards/aoa.json")

                elif message == 'üí¨—Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –∞–∫—Ç–∏–≤üí¨':
                    send_messageklava(event.chat_id, '–ù–∞', "keyboards/social.json")

                elif message == 'üëÅ–≤—Å—ë –æ —Ç–µ–±–µüëÅ':
                    send_messageklava(event.chat_id, '–ù–∞', "keyboards/world_and_you.json")
                elif message == 'üìú—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–µ–º–ª—ë–πüìú':
                    send_messageklava(event.chat_id, '–ù–∞', "keyboards/my_earth.json")

                elif message == '–≥–ª–æ—Å—Å–∞—Ä–∏–π –ø–æ –±–æ—Ç—É':
                    send_messageklava(event.chat_id, '–ù–∞', "keyboards/bot_info.json")

                elif message == '—Å—Å—ã–ª–æ—á–∫–∏':
                    print('safs')
                    send_messageklava(event.chat_id, '–ù–∞', "keyboards/info.json")
                elif message == '–∏–Ω—Ñ–∞':
                    print('safs')
                    send_messageklava(event.chat_id, '–ù–∞', "keyboards/sub_m.json")
                elif message == '—Ñ–∏–∑–∏–∫–∞':
                    print('safs')
                    send_messageklava(event.chat_id, '–ù–∞', "keyboards/physics.json")

                elif message == '–∫–∏–Ω–µ–º–∞—Ç–∏–∫–∞':
                    send_messagept(event.chat_id, '–î–µ—Ä–∂–∏—Ç–µ', 'photo-198702757_457239076')
                    send_messagept(event.chat_id, '–î–µ—Ä–∂–∏—Ç–µ', 'photo-198702757_457239077')

                elif message == '–¥–∏–Ω–∞–º–∏–∫–∞':
                    send_messagept(event.chat_id, '–î–µ—Ä–∂–∏—Ç–µ', 'photo-198702757_457239078')
                    send_messagept(event.chat_id, '–î–µ—Ä–∂–∏—Ç–µ', 'photo-198702757_457239079')


while True:
    try:
        opa = threading.Thread(target=upp_money)
        opa.start()

        opa1 = threading.Thread(target=decris_calld)
        opa1.start()
        bot_session = vk_api.VkApi(
            token="448a161c4370d920f09782b8ea67453e58f64ebe60444d3a6e3c99de30c1f6214ff9e838e3f713e7ee246")
        vk = bot_session.get_api()
        longpoll = VkBotLongPoll(bot_session, 198702757)
        main_conept()
    except BaseException:
        print('RDS')

import random
import time
import re

import threading

import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import INFO_STATUS
from INFO_STATUS import Infochar
import map_gg

keyboard = VkKeyboard(one_time=True)
keyboard.add_button('–ü—Ä–∏–≤–µ—Ç', color=VkKeyboardColor.NEGATIVE)
keyboard.add_button('–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞', color=VkKeyboardColor.POSITIVE)
keyboard.add_line()
keyboard.add_location_button()
keyboard.add_line()


def upp_money():
    while True:
        maimes = INFO_STATUS.getter_members()
        for chel in maimes:
            INFO_STATUS.refactor_member('coins', chel.coins + chel.improve, chel.id)
        time.sleep(60)


def upload_photo(name):
    upload = vk_api.VkUpload(vk)
    photo = upload.photo_messages(name)
    owner_id = photo[0]['owner_id']
    photo_id = photo[0]['id']
    access_key = photo[0]['access_key']
    attachment = f'photo{owner_id}_{photo_id}_{access_key}'
    return attachment


def send_messageklava(peer_id, message, klava):
    vk.messages.send(
        chat_id=peer_id,
        message=message,
        random_id=random.getrandbits(64),
        keyboard=open(klava, "r", encoding='utf-8-sig').read()
    )


def send_message(peer_id, message):
    vk.messages.send(
        chat_id=peer_id,
        message=message,
        random_id=random.getrandbits(64)
    )


def send_messagept(peer_id, message, photo):
    vk.messages.send(
        chat_id=peer_id,
        message=message,
        random_id=random.getrandbits(64),
        attachment=photo
    )


def main_conept():
    for event in longpoll.listen():
        if event.type == VkBotEventType.MESSAGE_NEW:

            if event.from_chat:
                message = event.obj['text'].lower()
                if '[club198702757|@club198702757]' in message:
                    message = message.replace('[club198702757|@club198702757] ', '')
                    print(message)
                else:
                    message = message.replace('[club198702757|—Ç–∞–π–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ –∫—Ç–±–æ 1-3] ', '')

                print(event.object)
                if message == 'üíú–∫—Ç–æ –≥–µ–π?üíú':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            owner = chel
                            print(owner.name)
                            if chel.coins >= 30:
                                INFO_STATUS.refactor_member('coins', chel.coins - 30, event.obj['from_id'])
                                send_message(event.chat_id, f'@id{owner.id}({owner.name}) –ø–æ—Ç—Ä–∞—Ç–∏–ª—Å—è –∞–∂ –Ω–∞ 30 –ø–∞–¥—à–∏—Ö '
                                                            f'–º–æ–Ω–µ—Ç —Ä–∞–¥–∏ '
                                                            f'–≥–µ–π—Å—Ç–≤–∞')
                                members = vk.messages.getConversationMembers(peer_id=2000000001, group_id=198702757)[
                                    'items']
                                members_ids = [member['member_id'] for member in members if member['member_id'] > 0]
                                idm = random.randint(0, len(members_ids) - 1)
                                for sex in maimes:
                                    if sex.id == members_ids[idm]:
                                        INFO_STATUS.refactor_member('gay_lvl', sex.gay_lvl + 1, members_ids[idm])

                                send_message(event.chat_id, '–≥–µ–π - @id' + str(members_ids[idm]) + '(–í—Å–µ–º–∏ –ª—é–±–∏–º—ã–π)')
                            else:
                                send_message(event.chat_id, '–î–µ–Ω–µ–≥ –Ω–µ—Ç—É, –≥–µ–π—Å—Ç–≤–æ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è')

                if message == 'üñ§–∫—Ç–æ –≥–µ–∏?üñ§':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            owner = chel
                            print(owner.name)
                            if chel.coins >= 150:
                                INFO_STATUS.refactor_member('coins', chel.coins - 150, event.obj['from_id'])
                                send_message(event.chat_id, f'@id{owner.id}({owner.name}) –ø–æ—Ç—Ä–∞—Ç–∏–ª—Å—è –∞–∂ –Ω–∞ 150 –ø–∞–¥—à–∏—Ö '
                                                            f'–º–æ–Ω–µ—Ç —Ä–∞–¥–∏ '
                                                            f'–û–ì–†–û–ú–ù–û–ì–û –≥–µ–π—Å—Ç–≤–∞')
                                for sex in maimes:
                                    INFO_STATUS.refactor_member('gay_lvl', sex.gay_lvl + 1, sex.id)
                                    send_message(event.chat_id, '–≥–µ–π - @id' + str(sex.id) + '(–í—Å–µ–º–∏ –ª—é–±–∏–º—ã–π)')
                            else:
                                send_message(event.chat_id, '–î–µ–Ω–µ–≥ –Ω–µ—Ç—É, –≥–µ–π—Å—Ç–≤–æ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è')

                if message == 'üç∫–∑–∞–∫–ª—é—á–∏—Ç—å –ø–∏–≤–Ω–æ–π –¥–æ–≥–æ–≤–æ—Ä!üç∫':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            owner = chel
                            print(owner.name)
                            if chel.coins >= 300:
                                INFO_STATUS.refactor_member('coins', chel.coins - 300, event.obj['from_id'])
                                send_message(event.chat_id, f'@id{owner.id}({owner.name}) –ø–æ—Ç—Ä–∞—Ç–∏–ª—Å—è –∞–∂ –Ω–∞ 300 –ø–∞–¥—à–∏—Ö '
                                                            f'–º–æ–Ω–µ—Ç —Ä–∞–¥–∏ '
                                                            f'–ü–∏–≤–Ω–æ–≥–æ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è')
                                members = vk.messages.getConversationMembers(peer_id=2000000001, group_id=198702757)[
                                    'items']
                                members_ids = [member['member_id'] for member in members if member['member_id'] > 0]
                                send_message(event.chat_id, '–í–∞—Å –ø–æ–Ω—è–ª, –≥–æ—Å–ø–æ–¥–∏–Ω...')
                                idm = random.randint(0, len(members_ids) - 1)
                                idm1 = random.randint(0, len(members_ids) - 1)
                                send_message(event.chat_id,
                                             f'–¢–æ–≤–∞—Ä–∏—â @id{members_ids[idm]}(–û—Ç–¥–∞—é—â–∏–π) –ø—Ä–æ–ª–µ—Ç–µ–ª –∞–∂ –Ω–∞ 60 —Ä—É–±–ª–µ–π')
                                send_message(event.chat_id,
                                             f'–¢–æ–≤–∞—Ä–∏—â @id{members_ids[idm1]}(–ü—Ä–∏–Ω–∏–º–∞—é—â–∏–π) –≤—ã–∏–≥—Ä–∞–ª –∞–∂ 60 —Ä—É–±–ª–µ–π')
                                for sex in maimes:
                                    if sex.id == members_ids[idm]:
                                        INFO_STATUS.refactor_member('coins', sex.coins - 60, sex.id)
                                        send_message(event.chat_id,
                                                     '–î–æ–≥–æ–≤–æ—Ä –∑–∞–∫–ª—é—á–µ–Ω. –¢–µ–ø–µ—Ä—å –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º –ø—Ä–∞–∑–¥–Ω–∏–∫–µ –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ '
                                                     '–ø–∏—Ç–∏—è @id' + str(
                                                         members_ids[
                                                             idm]) + '(—ç—Ç–æ—Ç —Å–∏–ª—å–Ω—ã–π –¥—É—Ö–æ–º –º—É–∂)' + ' –ø–æ–∫—É–ø–∞–µ—Ç —Å–∏–¥—Ä @id' + str(
                                                         members_ids[idm1]) + '(–Ω—É–∂–¥–∞—é—â–∏–º—É—Å—è) .')
                                    if sex.id == members_ids[idm1]:
                                        INFO_STATUS.refactor_member('coins', sex.coins + 60, sex.id)
                            else:
                                send_message(event.chat_id, '–î–µ–Ω–µ–≥ –Ω–µ—Ç—É, –ø–∏–≤–æ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è')

                elif message == 'üîÆ—É–∑–Ω–∞—Ç—å —Å—É–¥—å–±—ÉüîÆ':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            preds = open('–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è.txt', 'r', encoding='utf-8').readlines()
                            predsm = []
                            for line in preds:
                                predsm.append(line)
                            random_preds = random.randint(0, len(predsm))
                            send_message(event.chat_id, predsm[random_preds])
                            random_coins = random.randint(-30, 45)
                            INFO_STATUS.refactor_member('coins', chel.coins + random_coins, chel.id)
                            send_message(event.chat_id,
                                         f'–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –∑–∞–≤–µ–ª–æ –µ–≥–æ –≤ –Ω–µ–¥—Ä–∞ –¥–µ–Ω—å–∂–∞—Ç. @id{chel.id}({chel.name}) –ø–æ–ª—É—á–∞–µ—Ç {random_coins} —Ä—É–±–∞—Å–∏–∫–æ–≤')

                elif message == 'update_members':
                    members = vk.messages.getConversationMembers(peer_id=2000000001, group_id=198702757)['items']
                    members_ids = [member['member_id'] for member in members if member['member_id'] > 0]
                    for id in members_ids:
                        a = Infochar()
                        a.name = '–ë–µ–∑—ã–º—è–Ω–Ω—ã–π'
                        a.gay_lvl = 0
                        a.coins = 0
                        a.lvl = 0
                        a.id = id

                elif message == 'üìò—Ç–∞–±–ª–∏—Ü–∞ –º—É–∂–µ–πüìò':
                    members = INFO_STATUS.getter_members()
                    state = '–¢–æ–ø —á–∞—Ä–æ–≤:(–ò–º—è|–û—Ä–¥–µ–Ω –≥–µ–π—Å—Ç–≤–∞|–ü–∞–¥—à–∏—Ö –†—É–±–ª–µ–π|–£—Ä–æ–≤–µ–Ω—å)\n'
                    state = state + '-----------------------------------------------------------\n'
                    i = 1
                    for member in members:
                        state = state + f'{i}. üî∏{member.name}üî∏    | üßô{member.gay_lvl}üßô  |üí∞{member.coins}üí∞    |üîÆ{member.lvl}üîÆ\n'
                        i += 1
                    send_message(event.chat_id, state)
                elif re.search(r'\b—Å–º–µ–Ω–∏—Ç—å –∏–º—è –Ω–∞ \b', message):
                    name = message.replace('—Å–º–µ–Ω–∏—Ç—å –∏–º—è –Ω–∞ ', '')
                    name = name.title()
                    id = event.obj['from_id']
                    try:
                        INFO_STATUS.refactor_member(property='name', value=name, id=id)
                        send_message(event.chat_id, f'–£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –∏–º—è —á–µ–ª–∞ @id{id} –Ω–∞ {name}')
                    except BaseException:
                        send_message(event.chat_id, '–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è')
                elif message == 'üé≠–∫—Ç–æ —è?üé≠':
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            send_message(event.chat_id,
                                         f'üî∏@id{chel.id}({chel.name})üî∏ | üßô–°—Ç–µ–ø–µ–Ω—å –≥–µ–π—Å—Ç–≤–∞üßô: {chel.gay_lvl} |  üí∞–ü–∞–¥—à–∏–µ —Ä—É–±–ª–∏üí∞: {chel.coins}')

                elif message == '–¥–æ–≥–æ–≤–æ—Ä –æ –∑–µ–º–ª–µ':
                    send_message(event.chat_id, '–û–≥–æ! –ì–æ—Å–ø–æ–¥–∏–Ω —Ö–æ—á–µ—Ç –∫—É–ø–∏—Ç—å –∑–µ–º–ª—é? –ë–µ–ª–ª–∏—Å–∏–º–æ, –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ '
                                                '–Ω–∞ –∫–∞—Ä—Ç—É.')
                    map_gg.map_gen()
                    photo = upload_photo('temp_of_map_gen.png')

                    send_messagept(event.chat_id, '–í–æ—Ç, –≤—ã–±–µ—Ä–∏ —Å–≤–æ–±–æ–¥–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏ –∏ –ø–ª–∞—Ç–∏! –ö–∞–∂–¥—ã–π —Å—Ç–æ–∏—Ç 3000 –ø–∞–¥—à–∏—Ö '
                                                  '–º–æ–Ω–µ—Ç!', photo)
                    points = INFO_STATUS.getter_map_for_buy()
                    info_map = ''
                    maimes = INFO_STATUS.getter_members()
                    for pk in points:
                        if pk.status == '1':
                            for chel in maimes:
                                if chel.id == pk.owner_id:
                                    info_map += f'{pk.point}, –•–æ–∑—è–∏–Ω: {chel.name}, –¶–≤–µ—Ç: {pk.color}\n, –î–æ—Ö–æ–¥ —Å —Ç–æ—á–∫–∏: {pk.cost / 100}'
                    send_message(event.chat_id, '–¢–µ–∫—É—â–∏–µ –∑–∞–Ω—è—Ç—ã–µ —Ç–æ—á–∫–∏: \n' + info_map)


                elif re.search(r'\b–∫—É–ø–∏—Ç—å —É—á–∞—Å—Ç–æ–∫\b', message):
                    maimes = INFO_STATUS.getter_members()
                    for chel in maimes:
                        if chel.id == event.obj['from_id']:
                            if chel.coins >= 3000:
                                point = message.replace('–∫—É–ø–∏—Ç—å —É—á–∞—Å—Ç–æ–∫ ', '').title()
                                print(point)
                                points = INFO_STATUS.getter_map_for_buy()
                                for pk in points:
                                    if pk.point == point:
                                        if pk.status != '1':
                                            send_message(event.chat_id,
                                                         f'–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä, –¥–æ–≥–æ–≤–æ—Ä –∑–∞–∫–ª—é—á–µ–Ω. @id{chel.id}({chel.name}) —Ç—Ä–∞—Ç–∏—Ç {pk.cost * (chel.count_events + 1)} —Ä—É–±–∞—Å–∏–∫–æ–≤ –Ω–∞ —Ä–∞–π—Å–∫–∏–π —É–≥–æ–ª–æ–∫.')
                                            INFO_STATUS.refactor_member('coins', chel.coins - (
                                                    pk.cost * (chel.count_events + 1)), chel.id)
                                            INFO_STATUS.refactor_map('status', '1', point)
                                            if chel.count_events <= 0:

                                                color = str(random.randint(1, 255)) + ',' + str(
                                                    random.randint(1, 255)) + ',' + str(random.randint(1, 255))
                                                INFO_STATUS.refactor_map('color', color, point)
                                            else:
                                                for spk in points:
                                                    if spk.owner_id == chel.id:
                                                        color = spk.color
                                                        break
                                                INFO_STATUS.refactor_map('color', color, point)
                                            INFO_STATUS.refactor_member('count_event', chel.count_events + 1, chel.id)
                                            INFO_STATUS.refactor_member('improve_money',
                                                                        ((chel.count_events + 1) * 450) / 100, chel.id)

                                            send_message(event.chat_id,
                                                         f'–¢–µ–ø–µ—Ä—å –≤–∞—à –¥–æ—Ö–æ–¥ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç:{((chel.count_events + 1) * 450) / 100} (—Ä—É–±–ª–∏/–º–∏–Ω—É—Ç–∞)')

                                            INFO_STATUS.refactor_map('Owner_id', chel.id, point)
                                            map_gg.map_gen()
                                            photo = upload_photo('temp_of_map_gen.png')
                                            send_messagept(event.chat_id, '–ö–∞—Ä—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∞', photo)
                                        else:
                                            send_message(event.chat_id, '–≠—Ç–æ—Ç —É—á–∞—Å—Ç–æ–∫ –∑–∞–Ω—è—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π.')
                            else:
                                send_message(event.chat_id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏!')







                elif message == '–∞–æ–∞':
                    send_messageklava(event.chat_id, '–ù–∞', r"keyboards/aoa.json")

                elif message == 'üí¨—Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –∞–∫—Ç–∏–≤üí¨':
                    send_messageklava(event.chat_id, '–ù–∞', "keyboards/social.json")

                elif message == 'üëÅ–≤—Å—ë –æ —Ç–µ–±–µüëÅ':
                    send_messageklava(event.chat_id, '–ù–∞', "keyboards/world_and_you.json")

                elif message == '—Å—Å—ã–ª–æ—á–∫–∏':
                    print('safs')
                    send_messageklava(event.chat_id, '–ù–∞', "keyboards/info.json")
                elif message == '–∏–Ω—Ñ–∞':
                    print('safs')
                    send_messageklava(event.chat_id, '–ù–∞', "keyboards/sub_m.json")
                elif message == '—Ñ–∏–∑–∏–∫–∞':
                    print('safs')
                    send_messageklava(event.chat_id, '–ù–∞', "keyboards/physics.json")

                elif message == '–∫–∏–Ω–µ–º–∞—Ç–∏–∫–∞':
                    send_messagept(event.chat_id, '–î–µ—Ä–∂–∏—Ç–µ', 'photo-198702757_457239076')
                    send_messagept(event.chat_id, '–î–µ—Ä–∂–∏—Ç–µ', 'photo-198702757_457239077')

                elif message == '–¥–∏–Ω–∞–º–∏–∫–∞':
                    send_messagept(event.chat_id, '–î–µ—Ä–∂–∏—Ç–µ', 'photo-198702757_457239078')
                    send_messagept(event.chat_id, '–î–µ—Ä–∂–∏—Ç–µ', 'photo-198702757_457239079')


while True:
    try:
        opa = threading.Thread(target=upp_money)
        opa.start()
        bot_session = vk_api.VkApi(
            token="448a161c4370d920f09782b8ea67453e58f64ebe60444d3a6e3c99de30c1f6214ff9e838e3f713e7ee246")
        vk = bot_session.get_api()
        longpoll = VkBotLongPoll(bot_session, 198702757)
        main_conept()
    except BaseException:
        print('reconnect')
